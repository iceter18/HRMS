/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hrms;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import hrms.HRMS.search;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.plaf.basic.BasicScrollBarUI;
import javax.swing.table.JTableHeader;

/**
 *
 * @author AYSHA AQUINO
 */

public class Update extends javax.swing.JPanel {
    
    public static String selectedProf;
    public Update() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        upTable = new javax.swing.JTable();
        Search = new javax.swing.JTextField();

        jScrollPane1.getHorizontalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(255,51,0);
            }
        });

        jScrollPane1.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(255,51,0);
            }
        });
        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));

        upTable.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                UpdateProf prof = new UpdateProf(new javax.swing.JFrame(), true);
                if (e.getClickCount() == 2) {
                    JTable target = (JTable)e.getSource();
                    int row = target.getSelectedRow();
                    selectedProf = target.getModel().getValueAt(row, 0).toString();
                    prof.setVisible(true);
                }
            }
        });

        TableCellRenderer baseRenderer = upTable.getTableHeader().getDefaultRenderer();
        upTable.getTableHeader().setDefaultRenderer(new TableHeaderRenderer(baseRenderer));

        upTable.setDefaultRenderer(Object.class, new TableCellRenderer(){
            private DefaultTableCellRenderer DEFAULT_RENDERER = new DefaultTableCellRenderer();
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = DEFAULT_RENDERER.getTableCellRendererComponent (table, value, isSelected, hasFocus, row, column);
                if (!isSelected) {
                    if (row%2 == 0) {
                        c.setBackground(new Color (255, 255, 255));
                        c.setForeground(new Color(0,0,0));
                    }
                    else {
                        c.setBackground(new Color (255, 102, 0));
                        c.setForeground(new Color(255,255,255));
                    }
                }
                else{
                    upTable.setSelectionBackground(new java.awt.Color(0,51,204));
                    upTable.setSelectionForeground(new java.awt.Color(255,255,255));
                }
                return c;
            }
        });

        JTableHeader header = upTable.getTableHeader();
        header.setBackground(new Color(255,51,0));
        header.setForeground(new Color(255,255,255));
        upTable.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        upTable.setForeground(new java.awt.Color(255, 255, 255));
        upTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID NO.", "NAME", "GENDER", "PROGRAM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        upTable.setGridColor(new java.awt.Color(255, 255, 255));
        upTable.setShowHorizontalLines(false);
        jScrollPane1.setViewportView(upTable);
        if (upTable.getColumnModel().getColumnCount() > 0) {
            upTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            upTable.getColumnModel().getColumn(0).setMaxWidth(120);
            upTable.getColumnModel().getColumn(1).setPreferredWidth(200);
            upTable.getColumnModel().getColumn(2).setPreferredWidth(100);
            upTable.getColumnModel().getColumn(2).setMaxWidth(100);
            upTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            upTable.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        Search.setFont(new java.awt.Font("Corbel", 0, 14)); // NOI18N
        Search.setText("SEARCH");
        Search.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0)));
        Search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SearchFocusLost(evt);
            }
        });
        Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Search)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchFocusGained
        Search.setText(null);
    }//GEN-LAST:event_SearchFocusGained

    private void SearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SearchFocusLost
        Search.setText("SEARCH");
    }//GEN-LAST:event_SearchFocusLost

    private void SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchKeyReleased
        search s = new search();
        
        String query = Search.getText().toLowerCase();
        s.searcher (upTable, upTable.getModel(), Search);
    }//GEN-LAST:event_SearchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Search;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable upTable;
    // End of variables declaration//GEN-END:variables
}
